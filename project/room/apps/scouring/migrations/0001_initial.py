# Generated by Django 4.0.2 on 2022-03-02 14:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appraiser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'ارزیاب',
                'verbose_name_plural': 'ارزیاب ها',
                'db_table': 'T_Appraiser',
            },
        ),
        migrations.CreateModel(
            name='AppraiserType',
            fields=[
                ('appraiser_type_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='کد نوع ارزیاب')),
                ('appraiser_type_title', models.CharField(max_length=100, verbose_name='نام نوع ارزیاب')),
            ],
            options={
                'verbose_name': 'نوع ارزیاب',
                'verbose_name_plural': 'انواع ارزیاب',
                'db_table': 'T_AppraiserType',
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Criterion_title', models.TextField(max_length=100, verbose_name='عنوان معیار')),
                ('Criterion_description', models.TextField(max_length=300, verbose_name='توضیحات')),
                ('appraiser_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='scouring.appraisertype', verbose_name='کد ارزیاب')),
            ],
            options={
                'verbose_name': 'معیار',
                'verbose_name_plural': 'معیار ها',
                'db_table': 'T_Criterion',
            },
        ),
        migrations.CreateModel(
            name='CriterionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Score_title', models.TextField(max_length=100, verbose_name='عنوان امتیاز')),
                ('Score_value', models.IntegerField(default=0, verbose_name=' امتیاز')),
                ('Criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.criterion', verbose_name='معیار')),
            ],
            options={
                'verbose_name': 'امتیاز معیار ',
                'verbose_name_plural': 'امتیاز  معیار ها ',
                'db_table': 'T_CriterionScore',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='نام')),
                ('family', models.CharField(max_length=30, verbose_name='نام خانوادگی')),
                ('mobile_number', models.CharField(max_length=30, verbose_name='شماره موبایل')),
                ('is_active', models.BooleanField(default=False, null=True, verbose_name='غیرفعال/فعال')),
                ('slug', models.SlugField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'دانشجو',
                'verbose_name_plural': 'دانشجویان',
                'db_table': 'T_Student',
                'ordering': ['family', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=10, verbose_name='نام')),
                ('family', models.TextField(max_length=30, verbose_name='نام خانوادگی')),
                ('age', models.IntegerField(validators=[django.core.validators.MaxValueValidator(40, message='the value is too long')], verbose_name='سن')),
                ('mobile_number', models.CharField(max_length=30, verbose_name='شماره موبایل')),
                ('is_active', models.BooleanField(default=False, null=True, verbose_name='غیرفعال/فعال')),
                ('slug', models.SlugField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'مدرس',
                'verbose_name_plural': 'مدرس ها',
                'db_table': 'T_Teacher',
                'ordering': ['family', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_title', models.CharField(max_length=50, verbose_name='عنوان دوره')),
                ('term_description', models.TextField(verbose_name='توضیحات دوره')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد دوره')),
                ('start_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ شروع دوره')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('is_active', models.BooleanField(default=False, null=True, verbose_name='غیرفعال/فعال')),
                ('slug', models.SlugField(max_length=100, null=True)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='scouring.teacher', verbose_name='مدرس دوره')),
            ],
            options={
                'verbose_name': 'دوره',
                'verbose_name_plural': 'دوره ها',
                'db_table': 'T_Term',
                'ordering': ['term_title'],
            },
        ),
        migrations.CreateModel(
            name='Evalution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_date', models.DateField(auto_now_add=True, verbose_name='تاریخ')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کد دانشجو')),
                ('appraiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.appraiser', verbose_name='کد ارزیاب')),
                ('criterion_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.criterionscore', verbose_name='امتیاز')),
            ],
            options={
                'verbose_name': 'ارزیابی ',
                'verbose_name_plural': 'ارزیابی ها ',
                'db_table': 'T_Evalution',
            },
        ),
        migrations.AddField(
            model_name='appraiser',
            name='appraiser_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.appraisertype', verbose_name='نوع ارزیاب'),
        ),
        migrations.AddField(
            model_name='appraiser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.CreateModel(
            name='TermStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ ثبت نام')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.student', verbose_name='دانشجو')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scouring.term', verbose_name='دوره')),
            ],
            options={
                'verbose_name': 'دانشجوی دوره',
                'verbose_name_plural': 'دانشجویان دوره ',
                'db_table': 'T_TermStudent',
                'unique_together': {('student', 'term')},
            },
        ),
    ]
